{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{510:function(a,n,s){\"use strict\";s.r(n);var e=s(28),t=Object(e.a)({},(function(){var a=this,n=a.$createElement,s=a._self._c||n;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"【笔记】numpy-数组操作\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#【笔记】numpy-数组操作\"}},[a._v(\"#\")]),a._v(\" 【笔记】Numpy - 数组操作\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"import numpy as np\\n\")])])]),s(\"h2\",{attrs:{id:\"创建数组\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#创建数组\"}},[a._v(\"#\")]),a._v(\" 创建数组\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a = np.array([2,4,6])\\n\")])])]),s(\"h2\",{attrs:{id:\"获取数组类型和数组元素个数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#获取数组类型和数组元素个数\"}},[a._v(\"#\")]),a._v(\" 获取数组类型和数组元素个数\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"type(a)\\n# 输出为 numpy.ndarray\\n\\na.shape\\n# 输出为 (3,)\\n# 表示a为一维数组，有3个元素\\n\")])])]),s(\"h2\",{attrs:{id:\"确定数组维数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#确定数组维数\"}},[a._v(\"#\")]),a._v(\" 确定数组维数\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a = a.reshape((1,-1))\\n#表示将a数组指定为1行,-1为占位符(即：a数组中的元素个数已知，确定了行数后，列数也就确定了，所以 -1 为占位符)\\n\\na = a.reshape((-1,1))\\n#表示将数组指定为1列，-1为占位符\\n\")])])]),s(\"h2\",{attrs:{id:\"修改数组中指定元素\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#修改数组中指定元素\"}},[a._v(\"#\")]),a._v(\" 修改数组中指定元素\")]),a._v(\" \"),s(\"p\",[a._v(\"例如创建数组m\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"m = np.array([2,3,7,8,9,0])\\n\")])])]),s(\"p\",[a._v(\"确定数组维数为2行3列\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"m = m.reshape((2,-1))\\n\")])])]),s(\"p\",[a._v(\"输出数组m的结果\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"array([[2, 3, 7],\\n       [8, 9, 0]])\\n\")])])]),s(\"p\",[a._v(\"将 0 改为 1\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"m[1,2] = 1\\n\")])])]),s(\"h2\",{attrs:{id:\"创建数组的函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#创建数组的函数\"}},[a._v(\"#\")]),a._v(\" 创建数组的函数\")]),a._v(\" \"),s(\"p\",[a._v(\"zeros(m,n):创建m行n列的全零函数\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a = np.zeros((3,4))\\n\")])])]),s(\"p\",[a._v(\"ones(m,n)：创建m行n列的全1函数\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a = np.ones((4,5))\\n\")])])]),s(\"p\",[a._v(\"full((m,n),x)函数:创建m行n列的全x函数\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a = np.full((9,19),100)\\n\")])])]),s(\"p\",[a._v(\"eye():创建单位矩阵\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a = np.eye(4)\\n\")])])]),s(\"p\",[a._v(\"random.random():创建一个随机数组\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a = np.random.random((5,6))\\n\")])])]),s(\"h2\",{attrs:{id:\"数组索引\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数组索引\"}},[a._v(\"#\")]),a._v(\" 数组索引\")]),a._v(\" \"),s(\"p\",[a._v(\"取出数组中的部分数值\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a = np.array([[1,2,3,4],\\n              [5,6,7,8],\\n              [9,10,11,12]])\\n\\na[-2:,1:3] # 表示取出倒数第二行到最后一行，第一列到第三列的数，但不包括第三列\\n\\n\\\\# 输出结果为\\narray([[6,7],\\n      [10,11]])\\n\")])])]),s(\"p\",[a._v(\"将数组中的某行或某列加上某个数\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a[np.arange(3),2] += 2\\n\\\\# 将a数组的第二列元素加上2\\n\\na[np.arrange(3),[1,2,3]] += 2\\n\\\\# 将数组的第1，2，3列分别加上2\\n\\na[[0,1,2],[1,2,3]] += 2\\n\\nnp.arange(3)\\n\\\\# 输出结果为：array([0,1,2])\\n\")])])]),s(\"p\",[a._v(\"获取数组中所有大于某个数的值\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"result_index = a > 10\\nresult_index\\n\\n\\\\# 判断结果为：\\narray([[False, False, False, False],\\n       [False, False,  True, False],\\n       [False, False,  True,  True]])\\n\\n\\\\# 获取结果：\\n[result_index]\\narray([11, 13, 14])\\n\\n\\\\# 简化操作\\na[a>10]\\narray([11, 13, 14])\\n\")])])]),s(\"h2\",{attrs:{id:\"元素的数据类型\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#元素的数据类型\"}},[a._v(\"#\")]),a._v(\" 元素的数据类型\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a=np.array([1,2])\\na.dtype\\n#输出结果：dtype('int32')\\n\")])])]),s(\"p\",[a._v(\"创建数据类型为 int64 的数组，对于小数直接取整\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a = np.array([1.2,4.6],dtype=np.int64)\\n\")])])]),s(\"h2\",{attrs:{id:\"矩阵运算\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#矩阵运算\"}},[a._v(\"#\")]),a._v(\" 矩阵运算\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a = np.array([[1,2],\\n              [3,4]])\\nb = np.array([[5,6],\\n              [7,8])\\n\")])])]),s(\"p\",[a._v(\"加减乘除以及开方\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a + b \\n\\\\# 等价于\\nnp.add(a,b)\\n\\na - b\\n\\\\# 等价于\\nnp.subtract(a,b)\\n\\na * b\\n\\\\# 等价于\\nnp.multiply(a,b)\\n\\na / b\\n\\\\# 等价于\\nnp.divide(a,b)\\n\\nnp.sqrt(a)\\n\")])])]),s(\"p\",[a._v(\"矩阵乘法\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a.dot(b)\\n\\\\# 等价于\\nnp.dot(a,b)\\n\")])])]),s(\"h2\",{attrs:{id:\"常用函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#常用函数\"}},[a._v(\"#\")]),a._v(\" 常用函数\")]),a._v(\" \"),s(\"p\",[a._v(\"sum()函数：求和\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a = np.array([[1,2],\\n              [3,4]])\\n\\nnp.sum(a)     # 求数组所有元素的和\\n\\\\# 运行结果：10\\n\\nnp.sum(a,axis=0)   # 求每列元素的和\\n\\\\# 运行结果：array([4,6])\\n\\nnp.sum(a,axis=1)   # 求每行元素的和\\n\\\\# 运行结果：array([3,7])\\n\")])])]),s(\"p\",[a._v(\"mean()函数：求平均值，用法与sum()函数一致\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"np.mean(a)\\nnp.mean(a,axis=0)\\nnp.mean(a,axis=1)\\n\")])])]),s(\"p\",[a._v(\"uniform(函数)：生成指定范围类的随机数\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"np.ramdom.uniform(4,7) \\n\\\\# 运行结果：5.679353281008951\\n\")])])]),s(\"p\",[a._v(\"tile()函数：生成重复元素\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a = np.array([[1,2],\\n              [3,4]])\\n\\nnp.tile(a,(1,2))    # 将a看成一个整体，在行上重复1次，列上重复2次\\n\\\\# 输出结果\\narray([[1, 2, 1, 2],\\n       [3, 4, 3, 4]])\\n\\nnp.tile(a,(3,2))   # 将a看成一个整体，在行上重复1次，列上重复2次\\n\\\\# 输出结果\\narray([[1, 2, 1, 2],\\n    [3, 4, 3, 4],\\n    [1, 2, 1, 2],\\n    [3, 4, 3, 4],\\n    [1, 2, 1, 2],\\n    [3, 4, 3, 4]])\\n\")])])]),s(\"p\",[a._v(\"argsort()函数：对数组元素排序\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a = np.array([[1,3,5,2],\\n              [7,3,9,0]])\\n\\na.argsort()     # 对每行元素从小到大排序，返回每行元素下标\\n\\\\# 输出结果\\narray([[0, 3, 1, 2],\\n       [3, 1, 0, 2]], dtype=int64)\\n\\na.argsort(axis=0)   #对每列元素从小到大排序，返回每列元素下标\\n\\\\# 输出结果\\narray([[0, 0, 0, 1],\\n        [1, 1, 1, 0]], dtype=int64)\\n\")])])]),s(\"p\",[a._v(\"矩阵转置\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[a._v(\"a.T\\n\\\\# 或者\\nnp.transpose(a)\\n\")])])]),s(\"h2\",{attrs:{id:\"相关代码\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#相关代码\"}},[a._v(\"#\")]),a._v(\" 相关代码\")]),a._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://nico.cc/files/images/screenshots/python-numpy-nootbook.png\",alt:\"python-numpy-nootbook\"}})]),a._v(\" \"),s(\"Vssue\",{attrs:{title:a.$title}})],1)}),[],!1,null,null,null);n.default=t.exports}}]);","extractedComments":[]}