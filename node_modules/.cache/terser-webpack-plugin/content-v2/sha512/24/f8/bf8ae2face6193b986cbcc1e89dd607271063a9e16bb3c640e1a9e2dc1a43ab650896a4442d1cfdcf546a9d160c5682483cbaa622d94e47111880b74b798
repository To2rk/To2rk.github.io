{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{505:function(t,a,s){\"use strict\";s.r(a);var n=s(28),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"【笔记】python-list、tuple和dict\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#【笔记】python-list、tuple和dict\"}},[t._v(\"#\")]),t._v(\" 【笔记】Python——list、tuple和dict\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"如果中文字符串在Python环境下遇到 UnicodeDecodeError，这是因为.py文件保存的格式有问题。可以在第一行添加注释\")]),t._v(\" \"),s(\"p\",[t._v(\"# -\"),s(\"em\",[t._v(\"- coding: utf-8 -\")]),t._v(\"-\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"Python把0、空字符串''和None看成 False，其他数值和非空字符串都看成 True\")])])]),t._v(\" \"),s(\"p\",[t._v(\"例如：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[t._v(\"a = True\\nprint a and 'a=T' or 'a=F'\\n\")])])]),s(\"p\",[t._v(\"计算结果是字符串而不是布尔类型\")]),t._v(\" \"),s(\"p\",[t._v(\"解释：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[t._v(\"True and 'a=T' 计算结果是 'a=T'\\n继续计算 'a=T' or 'a=F' 计算结果还是 'a=T'\\n\")])])]),s(\"p\",[t._v(\"短路计算法则：\")]),t._v(\" \"),s(\"ol\",[s(\"li\",[s(\"p\",[t._v(\"在计算 a and b 时，如果 a 是 False，则根据与运算法则，整个结果必定为 False，因此返回 a；如果 a 是 True，则整个计算结果必定取决与 b，因此返回 b。\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"在计算 a or b 时，如果 a 是 True，则根据或运算法则，整个计算结果必定为 True，因此返回 a；如果 a 是 False，则整个计算结果必定取决于 b，因此返回 b。\")])])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"list：数学意义上的有序集合\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#list：数学意义上的有序集合\"}},[t._v(\"#\")]),t._v(\" list：数学意义上的有序集合\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"添加新元素\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#添加新元素\"}},[t._v(\"#\")]),t._v(\" 添加新元素\")]),t._v(\" \"),s(\"p\",[t._v(\"append(): 直接追加到末尾\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[t._v(\"L.append('new')\\n\")])])]),s(\"p\",[t._v(\"insert(): 添加到指定位置\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[t._v(\"#例如添加到第三个位置\\nL.insert(2,'new')\\n\")])])]),s(\"h3\",{attrs:{id:\"删除元素\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#删除元素\"}},[t._v(\"#\")]),t._v(\" 删除元素\")]),t._v(\" \"),s(\"p\",[t._v(\"pop(): 总是删除List最后一个元素\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[t._v(\"L.pop()\\n\")])])]),s(\"p\",[t._v(\"pop(n): 删除指定位置元素\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[t._v(\"L.pop(2)\\n\")])])]),s(\"h2\",{attrs:{id:\"tuple-：有序列表，中文为-元组\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#tuple-：有序列表，中文为-元组\"}},[t._v(\"#\")]),t._v(' tuple ：有序列表，中文为 \"元组\"')]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"tuple一旦创建，就无法修改，获取元素的方式和list一样，可使用t[0],t[-1]访问元素，但无法修改，增加和删除\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"continue ：跳过后续循环代码，继续下一次循环\")])])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"dict\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#dict\"}},[t._v(\"#\")]),t._v(\" dict\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"迭代dict中的value\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#迭代dict中的value\"}},[t._v(\"#\")]),t._v(\" 迭代dict中的value\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"values()方法：将dict转换成包含value的list,占用更多内存\")])]),t._v(\" \"),s(\"p\",[t._v(\"用法：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[t._v(\"for x in dict.values()\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"itervalues()方法：无需转换，占用更少内存\")])]),t._v(\" \"),s(\"p\",[t._v(\"用法：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[t._v(\"for x in dict.itervalues()\\n\")])])]),s(\"h4\",{attrs:{id:\"同时迭代dict中的key和value\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#同时迭代dict中的key和value\"}},[t._v(\"#\")]),t._v(\" 同时迭代dict中的key和value\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"items()方法：将dict转换成包含tuple的list\")])]),t._v(\" \"),s(\"p\",[t._v(\"用法：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[t._v(\"for key,value in dict.items():\\n\")])])]),s(\"h2\",{attrs:{id:\"生成列表\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#生成列表\"}},[t._v(\"#\")]),t._v(\" 生成列表\")]),t._v(\" \"),s(\"p\",[t._v(\"例如利用列表生成式生成列表[1x2,3x4,……,99x100]\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",[s(\"code\",[t._v(\"[x * (x+1) for x in range(1,100,2)]\\n\")])])]),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"isinstance(x, str) 可以判断变量 x 是否是字符串；\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"upper()返回字符串的大写字母、\")])])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"汉诺塔-越高盘子越小，越底下盘子越大\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#汉诺塔-越高盘子越小，越底下盘子越大\"}},[t._v(\"#\")]),t._v(\" 汉诺塔(越高盘子越小，越底下盘子越大)\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-python line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[s(\"code\",[t._v(\"    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"def\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"move\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" a\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" b\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" c\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" n \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"print\")]),t._v(\" a\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'--\\x3e'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" c\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\"\\n    move\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"a\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"c\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"b\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"        \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#首先将a上的n-1个(除最底下一个)移动到b(即：a上的n-1个通过c移动到b)\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"print\")]),t._v(\" a\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'--\\x3e'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" c      \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#移动完成后，a上只剩下最底下一个(最大的一个)，然后将这个最大的移到c\")]),t._v(\"\\n    move\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"b\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"a\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"c\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"        \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"#此时b上有n-1个，现在任务是将b上的所有n-1个移到c(即：b上的所有n-1个通过a移到c)\")]),t._v(\"\\n    move\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'A'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'B'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'C'\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),s(\"br\")])]),t._v(\" \"),s(\"Vssue\",{attrs:{title:t.$title}})],1)}),[],!1,null,null,null);a.default=e.exports}}]);","extractedComments":[]}